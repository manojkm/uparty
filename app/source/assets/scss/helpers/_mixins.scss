// ================================================================================================
// File Name      : mixins.scss
// Description    :
// ------------------------------------------------------------------------------------------------
// Item Name      : xxx - Responsive Admin Theme
// Version        : 1.2
// Author         : MANOJ
// Author URL     : http://www.themeforest.net/user/xxx
// ================================================================================================

//
// THEMIFY
// ======================================================

// Adapted from https://github.com/nborracha/plainID-DemoApp/blob/61b66cf018e918bcb17aa87f243fce2bc95d9833/app/styles/mixins.scss

@mixin themify($property, $key, $color-variant:null, $sledge-hammer:'', $themes: $themes-map) {

  // Iterate over the themes
  @each $themeName, $value in $themes {

    $main-colors: map-get-strict($value, 'main-colors');
    $partial-colors: map-get-strict($value, 'partial-colors');

    $color: null;

    /// color variant is optional
    @if ($color-variant != null) {
      /// map inception
      @if map-has-key($main-colors, $key) {
        $color: map-get-strict(map-get-strict($main-colors, $key), $color-variant);
      } @else if map-has-key($partial-colors, $key) {
        $color: map-get-strict(map-get-strict($partial-colors, $key), $color-variant);
      } @else {
        @warn 'Unfortunately, no value could be retrieved from "#{$key}". '
        + 'Please make sure it is defined in $#{$themeName}-palette-map.';
      }
    } @else {
      @if map-has-key($main-colors, $key) {
        $color: map-get-strict($main-colors, $key);
      } @else if map-has-key($partial-colors, $key) {
        $color: map-get-strict($partial-colors, $key);
      } @else {
        @warn 'Unfortunately, no value could be retrieved from "#{$key}". '
        + 'Please make sure it is defined in $#{$themeName}-palette-map.';
      }
    }

    @if ($themeName == $activeTheme and bool($dynamicTheme) == false) {
      // Create a selector (e.g. `.media.theme-light, .theme-light .media`)
      // &.theme-#{$themeName},
      .theme-#{$themeName} & {
        // Output the declaration
        #{$property}: $color #{$sledge-hammer};
      }
    } @else if ($dynamicTheme == true) {
      // Create a selector (e.g. `.media.theme-light, .theme-light .media`)
      // &.theme-#{$themeName},
      .theme-#{$themeName} & {
        // Output the declaration
        #{$property}: $color #{$sledge-hammer};
      }
    }

  }

}

/// Shorthand to themify color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin color($arguments...) {
  @include themify('color', $arguments...);
}

/// Shorthand to themify border-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin border-color($arguments...) {
  @include themify('border-color', $arguments...);
}

/// Shorthand to themify border-left-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin border-left-color($arguments...) {
  @include themify('border-left-color', $arguments...);
}

/// Shorthand to themify border-right-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin border-right-color($arguments...) {
  @include themify('border-right-color', $arguments...);
}

/// Shorthand to themify border-top-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin border-top-color($arguments...) {
  @include themify('border-top-color', $arguments...);
}

/// Shorthand to themify border-bottom-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin border-bottom-color($arguments...) {
  @include themify('border-bottom-color', $arguments...);
}

/// Shorthand to themify background-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin background-color($arguments...) {
  @include themify('background-color', $arguments...);
}

/// Shorthand to themify --box-shadow-color through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin box-shadow-color($arguments...) {
  @include themify('--box-shadow-color', $arguments...);
}

/// Shorthand to themify font family through `themify` mixin
/// @access public
/// @see {mixin} themify
@mixin font-family($arguments...) {
  @include themify('font-family', $arguments...);
}

//
// CONTEXTUAL & THEME BACKGROUND VARIANTS
// ======================================================

@mixin background-theme($scheme, $tone:base, $font-color:font-color, $sledge-hammer:null) {

  @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
    background-color: contextual-color($scheme, $tone) $sledge-hammer;
  } @else { // Theme variations
    @include background-color($scheme, $tone, $sledge-hammer);
  }
}

//
// CONTEXTUAL & THEME BACKGROUND VARIANTS WITH TEXT COLOR
// ======================================================

@mixin background-text-theme($scheme, $tone:base, $font-color:font-color, $sledge-hammer:null) {

  @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
    background-color: contextual-color($scheme, $tone) $sledge-hammer;
    color: contextual-color($scheme, $font-color) $sledge-hammer;
  } @else { // Theme variations
    @include background-color($scheme, $tone, $sledge-hammer);
    @include color($scheme, $font-color, $sledge-hammer);
  }
}

//
// CONTEXTUAL & THEME BORDER VARIANTS
// ======================================================

@mixin border-theme($scheme, $tone:base, $position:all, $sledge-hammer:null) {

  @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations

    @if $position == 'all' {
      border-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'top' {
      border-top-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'bottom' {
      border-bottom-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'right' {
      border-right-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'left' {
      border-left-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'top-bottom' {
      border-top-color: contextual-color($scheme, $tone) $sledge-hammer;
      border-bottom-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'right-left' {
      border-left-color: contextual-color($scheme, $tone) $sledge-hammer;
      border-right-color: contextual-color($scheme, $tone) $sledge-hammer;
    } @else if $position == 'left-bottom' {
      border-left-color: contextual-color($scheme, $tone) $sledge-hammer;
      border-bottom-color: contextual-color($scheme, $tone) $sledge-hammer;
    }

  } @else { // Theme variations

    @if $position == 'all' {
      @include border-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'top' {
      @include border-top-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'bottom' {
      @include border-bottom-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'right' {
      @include border-right-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'left' {
      @include border-left-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'top-bottom' {
      @include border-top-color($scheme, $tone, $sledge-hammer);
      @include border-bottom-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'right-left' {
      @include border-left-color($scheme, $tone, $sledge-hammer);
      @include border-right-color($scheme, $tone, $sledge-hammer);
    } @else if $position == 'left-bottom' {
      @include border-left-color($scheme, $tone, $sledge-hammer);
      @include border-bottom-color($scheme, $tone, $sledge-hammer);
    }

  }
}

//
// CONTEXTUAL & THEME TEXT VARIANTS
// ======================================================

@mixin text-theme($scheme, $font-color:base, $sledge-hammer:null) {

  @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
    color: contextual-color($scheme, $font-color) $sledge-hammer;
  } @else { // Theme variations
    @include color($scheme, $font-color, $sledge-hammer);
  }

}

//
// CONTEXTUAL & THEME TEXT LINK VARIANTS
// ======================================================

@mixin text-link-theme($scheme, $font-color:base, $hover-color:dark, $tone-active:x-dark, $sledge-hammer:null) {
  @at-root a#{&} {
    #{$hover-tags} {
      @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
        color: contextual-color($scheme, $hover-color) $sledge-hammer;
      } @else { // Theme variations
        @include color($scheme, $hover-color, $sledge-hammer);
      }
    }

    #{$active-tags},
    #{$focus-tags} {
      @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
        color: contextual-color($scheme, $tone-active) $sledge-hammer;
      } @else { // Theme variations
        @include color($scheme, $tone-active, $sledge-hammer);
      }
    }
  }
}

//
// REM FONT SIZING  - ADVANCED
// ======================================================
// Adapted from http://www.stubbornella.org/content/2013/07/01/easy-peasy-rem-conversion-with-sass/
// Usage @include fontSize(16px);

@mixin font-size($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}

//
// TEXT SHADOW
// ======================================================

@mixin text-shadow($tShadow : 0px 1px 3px rgba(0,0,0,.5)) {
  -webkit-box-shadow: $tShadow;
  -moz-box-shadow: $tShadow;
  -o-box-shadow: $tShadow;
  box-shadow: $tShadow;
}

//
// TRANSITIONS
// ======================================================
// Usage @include transition(color .3s ease); @include transition;

@mixin transition($transitionvalue : all $general-transition-duration ease) {
  -webkit-transition: $transitionvalue;
  -o-transition: $transitionvalue;
  -moz-transition: $transitionvalue;
  transition: $transitionvalue;
}

//
// BORDER RADIUS
// ======================================================
// Usage @include border-radius(4px);

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// Usage @include set-border-radius($input-border-radius-lg);
@mixin set-border-radius($radius) {
  @if bool($enable-rounded) == true {
    border-radius: $radius;
  } @else {
    border-radius: 0;
  }
}

//
// BORDER
// ======================================================
// Usage
// @include add-border(1px, #cccccc, top);
// @include add-border(1px, #cccccc, right-left);
// @include add-border(1px, #cccccc, all);

@mixin add-border($size, $color, $position) {
  @if $position == 'all' {
    border: $size solid $color;
  } @else if $position == 'top' {
    border-top: $size solid $color;
  } @else if $position == 'bottom' {
    border-bottom: $size solid $color;
  } @else if $position == 'right' {
    border-right: $size solid $color;
  } @else if $position == 'left' {
    border-left: $size solid $color;
  } @else if $position == 'top-bottom' {
    border-top: $size solid $color;
    border-bottom: $size solid $color;
  } @else if $position == 'right-left' {
    border-left: $size solid $color;
    border-right: $size solid $color;
  } @else if $position == 'left-bottom' {
    border-left: $size solid $color;
    border-bottom: $size solid $color;
  }
}

//
// OPACITY
// ======================================================
// Usage @include opacity(1);

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{alpha(opacity=$opacity-ie)};
}

//
// VENDOR PREFIX
// ======================================================

@mixin vendor($property, $value...) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  #{$property}: $value;
}

//
// CLEARFIX FOR IE8 & ABOVE
// ======================================================
// Adapted from http://css-tricks.com/snippets/css/clear-fix/

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

//
// CENTERING
// ======================================================
// Center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    transform: translateX(-50%) translateY(-50%);
  } @else if $xy == x {
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  } @else if $xy == y {
    top: 50%;
    bottom: auto;
    transform: translateY(-50%);
  }
}

//
// BUTTONS
// ======================================================

// TODO: http://demos.creative-tim.com/now-ui-kit/documentation/tutorial-components.html?ref=nuk-free-doc#buttons-row

@mixin btn-theme($scheme, $bg:fill, $tone:base, $tone-hover:dark, $tone-active:x-dark, $font-color:font-color) {

  @include border-theme($scheme, $tone);

  @if $bg == fill {
    @include background-text-theme($scheme, $tone, $font-color);
  }

  @if $bg == outline {
    background-color: transparent;
    @include text-theme($scheme, $tone);
  }

  #{$hover-tags} {
    @include border-theme($scheme, $tone-hover);
    @include background-text-theme($scheme, $tone-hover, $font-color);
  }

  #{$active-tags},
  #{$focus-tags},
  .show > &.dropdown-toggle,
  .show > &.dropdown-toggle:focus,
  .show > &.dropdown-toggle:hover {
    @include border-theme($scheme, $tone-active);
    @include background-text-theme($scheme, $tone-active, $font-color);
  }

  &.btn-link {
    @include text-theme($scheme, $tone);

    #{$hover-tags} {
      @include text-theme($scheme, $tone-hover);
    }

    #{$active-tags},
    #{$focus-tags},
    .show > &.dropdown-toggle,
    .show > &.dropdown-toggle:focus,
    .show > &.dropdown-toggle:hover {
      @include text-theme($scheme, $tone-active);
    }

  }
  &.btn-raised {
    @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
      box-shadow: 0 $btn-raised-box-shadow-y-offset 0 0 contextual-color($scheme, $tone-hover);
    } @else { // Theme variations
      $box-shadow-color: theme-color($scheme, $tone-hover);
      box-shadow: 0 $btn-raised-box-shadow-y-offset 0 0 $box-shadow-color;
    }

    #{$hover-focus-tags},
    #{$active-tags},
    .show > &.dropdown-toggle,
    .show > &.dropdown-toggle:focus,
    .show > &.dropdown-toggle:hover {
      @include border-theme($scheme, $tone);
      @include background-text-theme($scheme, $tone, $font-color);
    }

    #{$hover-tags},
    #{$active-tags} {
      @if map-has-key($contextual-palette-map, $scheme) { // Contextual variations
        box-shadow: 0 $btn-raised-box-shadow-y-offset-hover 0 0 contextual-color($scheme, $tone-hover);
      } @else { // Theme variations
        $box-shadow-color: theme-color($scheme, $tone-hover);
        box-shadow: 0 $btn-raised-box-shadow-y-offset-hover 0 0 $box-shadow-color;
      }
    }
  }

}

//
// SOCIAL BUTTONS
// ======================================================

@mixin btn-social-theme($tone:base, $tone-hover:dark, $tone-active:x-dark, $font-color:font-color, $bg:fill) {

  border-color: $tone;
  // Filled button
  @if $bg == fill {
    background-color: $tone;
    color: $font-color;
  }
  // Outline button
  @if $bg == outline {
    background-color: transparent;
    color: $tone
  }

  #{$hover-tags} {
    border-color: $tone-hover;
    background-color: $tone-hover;
    color: $font-color;
  }

  #{$active-tags},
  #{$focus-tags},
  .show > &.dropdown-toggle,
  .show > &.dropdown-toggle:focus,
  .show > &.dropdown-toggle:hover {
    border-color: $tone-active;
    background-color: $tone-active;
    color: $font-color;
  }

  &.btn-link {
    color: $tone;
    #{$hover-tags} {
      color: $tone-hover;
    }

    #{$active-tags},
    #{$focus-tags} {
      color: $tone-active;
    }
  }

}

//
// BUTTON SIZES
// ======================================================

@mixin btn-size($padding-y, $padding-x, $min-width, $min-height, $font-size, $border, $line-height) {
  @include set-border-radius($border);
  font-size: $font-size;
  padding: $padding-y $padding-x;
  min-width: $min-width;
  min-height: $min-height;
  line-height: $line-height;
}

//
// BADGES
// ======================================================

@mixin badges-theme($scheme, $bg:fill, $tone:base, $tone-hover:dark, $tone-active:x-dark,  $font-color:font-color, $sledge-hammer:null) {

  @include border-theme($scheme, $tone);
  // Filled button
  @if $bg == fill {
    @include background-theme($scheme, $tone, $sledge-hammer);
    @include text-theme($scheme, $font-color);
    * {
      @include text-theme($scheme, $font-color, $sledge-hammer);
    }
  }
  // Outline button
  @if $bg == outline {
    background-color: transparent;
    @include text-theme($scheme, $tone);
    * {
      @include text-theme($scheme, $tone, $sledge-hammer);
    }
  }

  // Link Badges
  @at-root a#{&} {
    #{$hover-tags} {
      @include border-theme($scheme, $tone-hover);
      @include background-theme($scheme, $tone-hover, $sledge-hammer);
      @include text-theme($scheme, $font-color);
    }

    #{$active-tags},
    #{$focus-tags} {
      @include border-theme($scheme, $tone-active);
      @include background-theme($scheme, $tone-active, $sledge-hammer);
      @include text-theme($scheme, $font-color);
    }
  }

}

//
// BREADCRUMB EXTENDED - WIZARD
// ======================================================

@mixin breadcrumb-wizard-status($scheme, $tone:base, $tone-hover:dark, $tone-border:x-dark, $font-color:font-color) {

  @include background-theme($scheme, $tone);

  & a {
    @include text-theme($scheme, $font-color);
  }

  &:hover {
    @include background-theme($scheme, $tone);
  }

  &:after {
    @include border-theme($scheme, $tone, $position: left);
  }

  &:hover:after {
    @include border-theme($scheme, $tone, $position: left);
  }

  &:before {
    @include border-theme($scheme, $tone-border, $position: left);
  }

  &:hover:before {
    @include border-theme($scheme, $tone-border, $position: left);
  }

}

//
// POPOVERS
// ======================================================

@mixin popover-theme($scheme, $tone:base, $header-tone:dark, $border-tone:dark, $font-color:font-color) {

  @include border-theme($scheme, $border-tone);
  @include background-theme($scheme, $tone);

  .popover-body {
    @include text-theme($scheme, $font-color);
  }

  &.bs-popover-right .arrow:after {
    @include border-theme($scheme, $tone, $position: right);
  }

  &.bs-popover-top .arrow:after {
    @include border-theme($scheme, $tone, $position: top);
  }

  &.bs-popover-bottom .arrow:after {
    @include border-theme($scheme, $tone, $position: bottom);
  }

  &.bs-popover-left .arrow:after {
    @include border-theme($scheme, $tone, $position: left);
  }

  .popover-header {
    @include border-theme($scheme, $header-tone);
    @include background-text-theme($scheme, $header-tone, $font-color);
  }
}

//
// TAB EXTENDED - BOXED
// ======================================================

@mixin tab-extended-boxed-theme($scheme, $tone:base, $font-color:font-color) {

  @include background-theme($scheme, $tone);

  .nav-link {
    @include opacity(0.6);
  }
  .nav-link,
  .boxed-tab-title {
    @include text-theme($scheme, $font-color);
  }

  .nav-link.active,
  .nav-link:hover,
  .nav-link:focus,
  .nav-item.show .nav-link {
    @include opacity(1);
    @include text-theme($scheme, $tone);
  }

}

//
// TOOLTIP
// ======================================================

@mixin tooltip-theme($scheme, $tone:base, $font-color:font-color) {

  .tooltip-inner {
    @include background-text-theme($scheme, $tone, $font-color);
  }

  // Right tooltip
  &.bs-tooltip-right .arrow:before {
    @include border-theme($scheme, $tone, $position: right);
  }

  // Top tooltip
  &.bs-tooltip-top .arrow:before {
    @include border-theme($scheme, $tone, $position: top);
  }
  // Bottom tooltip
  &.bs-tooltip-bottom .arrow:before {
    @include border-theme($scheme, $tone, $position: bottom);
  }

  // Left tooltip
  &.bs-tooltip-left .arrow:before {
    @include border-theme($scheme, $tone, $position: left);
  }

}

//
// PAGINATION SIZE
// ======================================================

@mixin pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  .page-link {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height;
  }

  .page-item {
    &:first-child {
      .page-link {
        @include border-left-radius($border-radius);
      }
    }
    &:last-child {
      .page-link {
        @include border-right-radius($border-radius);
      }
    }
  }
}

//
// MODEL
// ======================================================

@mixin modal-theme($scheme, $tone:base, $border-tone:dark, $font-color:font-color) {

  .modal-header {
    @include border-theme($scheme, $border-tone);
    @include background-text-theme($scheme, $tone, $font-color);
  }

  // Title text within header
  .modal-title {
    @include text-theme($scheme, $font-color);
  }

  button.close {
    @include text-theme($scheme, $font-color);
  }
}

//
// CUSTOM TOGGLE
// ======================================================

@mixin custom-toggle($scheme, $tone:base, $tone-border:base, $font-color:font-color) {

  $cci: custom-control-input;
  $ccind: custom-control-indicator;

  .#{$cci}:checked + .#{$ccind},
  .#{$cci}:checked:active + .#{$ccind} {

    @include border-theme($scheme, $tone-border);
    @include background-theme($scheme, $tone);

    &:after {
      @include background-theme($scheme, $font-color);
    }
  }
  &.mini .#{$cci}:checked + .#{$ccind},
  &.mini .#{$cci}:checked:active + .#{$ccind} {
    &:after {
      @include background-theme($scheme, $tone);
    }
  }

}

//
// CUSTOM TOGGLE FLIP
// ======================================================

@mixin custom-toggle-flip($scheme, $tone:base, $tone-border:base, $font-color:font-color) {

  $ctf: custom-toggle-flip;
  $cci: custom-control-input;
  $ccind: custom-control-indicator;

  .#{$ccind} {
    &:after {
      @include background-text-theme($scheme, $tone, $font-color);
    }
  }

}

//
// ALERT
// ======================================================

@mixin alert-theme($background, $border, $color) {

  color: $color;
  border-color: $border;
  background-color: $background;

  hr {
    border-top-color: darken($border, 5%);
  }

  // Close button
  @at-root &.alert-dismissible > .close {
    color: $color;
  }

  // Link color
  & .alert-link {
    &,
    #{$hover-focus-tags} {
      color: darken($color, 10%);
    }
  }

  p {
    color: $color;
  }

}


//
// PROGRESS BARS
// ======================================================

@mixin progress-bar-theme($scheme, $tone:base, $font-color:font-color) {
  span.progress-label {
    @include background-text-theme($scheme);
    &::after {
      @include border-theme($scheme, $tone, $position: bottom);
    }
  }
}

//
// FORMS
// ======================================================

// Form control focus state
@mixin form-control-focus() {
  &:focus {
    //@include transition;
    color: $input-focus-color;
    @include border-theme($input-focus-border-theme-scheme, $input-focus-border-theme-tone);
    box-shadow: none;
    &:hover {
      @include border-theme($input-focus-border-theme-scheme, $input-focus-border-theme-tone);
    }
  }
}

// Form control hover state
@mixin form-control-hover() {
  &:hover {
    border-color: $input-hover-border-color;
  }
}

// Form control disabled state
@mixin form-control-disabled() {

  #{$disabled-tags},
  &[readonly] {
    border-color: $input-disabled-border-color;
    background-color: $input-disabled-bg;
    color: $input-disabled-color;
    &:hover {
      cursor: $cursor-not-allowed;
    }
    &::placeholder {
      color: $input-disabled-color;
    }
  }
}

// Form validation mixin for dynamic states.
@mixin form-validation-state($state, $color) {
  .#{$state}-feedback {
    @include transition;
    color: $color;
  }

  .#{$state}-tooltip {
    @include transition;
    background-color: rgba($color, .8);
  }

  .form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: rgba($color, .6);
      background-color: rgba($color, .1);
      box-shadow: none;

      &:focus {
        border-color: $color;
        box-shadow: none;
        &:hover {
          border-color: $color;
        }
      }
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      + .form-check-label {
        @include transition;
        color: $color;
      }
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        color: $color;
        &::before {
          background-color: lighten($color, 10%);
          border-color: transparent;
        }
      }

      &:focus ~ .custom-control-label::before {
        box-shadow: none;
      }
    }
  }

  // Custom select
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      color: $color;
    }
  }

  // Custom file upload
  .custom-file-input {

    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: rgba($color, .6);
        box-shadow: none;
        color: $color;

        &::after {
          background-color: rgba($color, .1);
          border-color: rgba($color, .6);
          color: $color;
        }
      }

      &:focus {
        ~ .custom-file-label {
          box-shadow: none;
          border-color: $color;
          &::after {
            border-color: $color;
          }
        }
      }
    }
  }

  // Custom toggles
  .custom-toggle .custom-control-input {

    &:checked {
      .was-validated &:#{$state},
      &.is-#{$state} {
        ~ .custom-control-indicator {
          border-color: transparent;

          &:after {
            background: $custom-toggle-knob-bg;
          }
        }
      }
    }

    .was-validated &:#{$state},
    &.is-#{$state} {

      ~ .custom-control-indicator {
        background: $white-color;

        &:after {
          background-color: lighten($color, 10%);
        }
      }
    }
  }
}

//
// TRANSPARENT FORMS
// ======================================================

@mixin transparent-forms($background-color,$background-focus-color,$border-color,$border-focus-color,$font-color,$font-focus-color, $placeholder-disable-color) {

  %transparent-form-control {
    background-color: $background-color;
    color: $font-color;
    border-color: $border-color;

    &::placeholder {
      color: $placeholder-disable-color;
    }
    &:hover:not([disabled]):not([readonly]),
    &:focus:not([disabled]):not([readonly]) {
      color: $font-focus-color;
      border-color: $border-focus-color;
      background-color: $background-focus-color;
    }
    &:focus {
      &:hover {
        border-color: $border-focus-color;
      }
    }

    &:disabled,
    &[readonly] {
      background-color: $background-color;
      color: $font-color;
      @include opacity(0.7);
    }
  }

  .form-control {
    @extend %transparent-form-control;
  }

  // Select
  select.form-control:not([multiple]) option,
  select.form-control:not([multiple]) optgroup,
  select.custom-select:not([multiple]) option,
  select.custom-select:not([multiple]) optgroup {
    color: $gray-700;
  }

  // Custom select
  .custom-select {
    @extend %transparent-form-control;
    border: none;
  }

  // Custom file input
  .custom-file-label {
    background-color: $background-color;
    color: $placeholder-disable-color;
    border: none;
    &::after {
      background-color: $background-focus-color;
      color: $font-focus-color;
      border: none;
      top: 0;
    }
  }

  // Input group with icon addon
  .input-group {
    &[class*="with-addon-icon"] {
      .input-group-text {
        background-color: $background-color;
      }
      .input-group-prepend {
        margin-right: 0;
      }

      .input-group-append {
        margin-left: 0;
      }
    }
  }

  .input-group-text {
    color: $font-color;
    background-color: $background-color;
    border: none;
  }
  .input-group-focus,
  .input-group-hover {
    .input-group-text,
    .custom-select {
      color: $font-focus-color;
    }
    &.input-group[class*="with-addon-icon"] {
      .input-group-text {
        background-color: $background-focus-color;
      }
    }
  }

  .disabled,
  .readonly {
    &.input-group-text {
      background-color: $background-color !important;
      color: $placeholder-disable-color;
    }
  }

  // Chosen select
  .chosen-single,
  .chosen-choices {
    @extend %transparent-form-control;
  }
  .chosen-single div b {
    background-color: transparent
  }
  .chosen-choices {
    border: none
  }
  .chosen-container-multi .chosen-choices li.search-field input[type="text"],
  .chosen-container-single .chosen-default {
    color: $placeholder-disable-color !important;
  }
  .chosen-single abbr {
    &::after {
      color: $font-color;
    }
  }
  .chosen-container-active {
    .chosen-choices {
      li.search-field input[type="text"] {
        color: $font-focus-color !important;
      }
    }
  }
}