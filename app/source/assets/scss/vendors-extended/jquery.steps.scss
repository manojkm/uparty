// ================================================================================================
// File Name      : jquery.steps.scss
// Description    : Custom overrides of Jquery-Steps Plugin
//                  (https://github.com/rstaib/jquery-steps)
//                  These styles are required for Jquery.Steps to function.
//                  You probably don't need to change these rules.
// ------------------------------------------------------------------------------------------------
// Item Name      : xxx - Responsive Admin Theme
// Version        : 1.2
// Author         : MANOJ
// Author URL     : http://www.themeforest.net/user/xxx
// ================================================================================================
//
// VENDORS DEPENDENCIES IMPORT
// ======================================================
// Please make sure to import the dependencies as they're necessary for all vendors extensions to function.
@import 'dependencies';

//
// JQUERY STEPS
// ======================================================

.wizard {
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;
  padding: $steps-wizard-padding-y 0;

  // Accessibility
  > .steps .current-info {
    position: absolute;
    left: -999em;
  }
  > .content > .title {
    position: absolute;
    left: -999em;
  }

  > .steps {
    position: relative;
    margin-bottom: $steps-margin-bottom;

    ul {
      list-style: none !important;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: row;

      @include max-screen($screen-xs-max) {
        flex-direction: column;
      }

      li {
        position: relative;
        flex: 1;
        margin: 0 $steps-margin-right 0 0;

        @include max-screen($screen-xs-max) {
          margin: 0 0 $steps-margin-bottom 0;
        }

        &:before {
          @include transition;
          content: '';
          display: block;
          position: absolute;
          z-index: 9;
          left: 0;
        }
        &:after {
          @include transition;
          content: '';
          display: block;
          position: absolute;
          z-index: 9;
          right: 0;
        }

        &:first-child:before,
        &:last-child:after {
          content: none;
        }
        &:last-child {
          margin: 0 !important;
        }

      }
    }

  }
  > .content {
    @include transition;
    @include set-border-radius($card-border-radius);
    @include add-border($card-border-size, $card-border-color, all);
    background: $steps-content-bg;
    min-height: 25em;
    overflow: hidden;
    position: relative;

    > .body {
      padding: 1.25rem;

      input.error {
        //border-color: rgba(218, 68, 83, 0.6);
        //background-color: rgba(218, 68, 83, 0.1);
        //color: #8a1f11;

        background-color: rgba($form-feedback-invalid-color, .1);
        border-color: rgba($form-feedback-invalid-color, .6);
        color: $form-feedback-invalid-color;
      }

      label.error {
        color: $form-feedback-invalid-color;
      }

    }
  }
  > .actions {
    margin-top: $steps-action-margin-top;
    width: 100%;
    display: flex;
    justify-content: flex-end;

    ul {
      margin: 0;
      padding: 0;
      list-style: none !important;
      display: flex;
      flex-direction: row;
      li {
        margin: 0 0 0 $steps-action-button-margin-left;
        &.disabled a,
        &.disabled a:hover,
        &.disabled a:active {
          opacity: $steps-disabled-opacity;
          cursor: $cursor-default;
          pointer-events: none;
        }
      }
    }
  }

  .step-indicator {
    font-size: $step-indicator-font-size;
    color: $step-indicator-color;
  }

}

//
// VERTICAL WIZARD TYPE
// ======================================================

.wizard.vertical {
  @include max-screen($screen-sm-max) {
    flex-direction: column;
  }
  flex-direction: row;
  flex-flow: wrap;

  > .steps {
    @include max-screen($screen-sm-max) {
      width: 100%;
    }
    width: 20%;
    //flex: 1 0 0;

    ul {
      flex-direction: column;
      li {
        margin: 0 0 $steps-margin-bottom 0;
      }
    }
  }

  > .content {
    flex: auto;
    margin-left: 20px;
    @include max-screen($screen-sm-max) {
      margin-left: 0;
    }
  }

}

//
// PILLS WIZARD TYPE
// ======================================================

.wizard.pills-wizard {
  > .steps {
    a,
    a:hover,
    a:active {
      @include transition;
      @extend %button;
      //@extend .btn-lg;
      @include btn-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-min-width-lg, $btn-min-height-lg, $btn-font-size-lg, $btn-border-radius-lg, $btn-line-height-lg);
      width: 100%;
      justify-content: flex-start;
    }
    .disabled a,
    .disabled a:hover,
    .disabled a:active {
      background: $steps-disabled-bg;
      color: $steps-disabled-color;
      cursor: $cursor-default;
    }

    .current a,
    .current a:hover,
    .current a:active {
      @include background-text-theme($steps-active-theme-scheme);
      cursor: $cursor-default;
    }

    .done a,
    .done a:hover,
    .done a:active {
      @include background-text-theme($steps-done-theme-scheme);
      @include opacity($steps-disabled-opacity);
    }
    .error a,
    .error a:hover,
    .error a:active {
      @include background-text-theme($steps-error-theme-scheme, $sledge-hammer: !important);
    }

  }

}

//
// CIRCLE WIZARD TYPE
// ======================================================

.wizard.circle-wizard {

  > .steps {
    ul {
      li {
        margin-right: 0;
        &:before,
        &:after {
          @include transition;
          top: $steps-circle-line-top-space;
          width: 50%;
          height: $steps-circle-line-size
        }
      }
    }

    a {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .step-title {
      font-size: $steps-circle-title-font-size;
      text-align: center;
      display: flex;
      flex-direction: column;
    }

    .step {
      @include transition;
      @include border-radius($btn-round-radius);
      border: $steps-circle-border-size solid transparent;
      width: $steps-circle-size;
      min-width: $steps-circle-size;
      min-height: $steps-circle-size;
      position: relative;
      line-height: $steps-circle-line-height;
      font-size: $steps-circle-font-size;
      z-index: 10;
      box-sizing: content-box;
      display: inline-flex;
      align-items: center;
      justify-content: center;

    }

    .current {
      .step {
        @include transition;
        @include background-text-theme($steps-active-theme-scheme);
        @include border-theme($steps-active-theme-scheme);
      }
      &:before,
      &:after {
        @include transition;
        @include background-theme($steps-active-theme-scheme);
      }
      a,
      a:hover,
      a:active {
        color: $steps-circle-title-color;
      }
    }

    .current.done,
    .done {
      @include opacity($steps-disabled-opacity);
      .step {
        @include transition;
        @include background-text-theme($steps-done-theme-scheme);
        @include border-theme($steps-done-theme-scheme);
      }
      &:before,
      &:after {
        @include transition;
        @include background-theme($steps-done-theme-scheme);
      }
      a,
      a:hover,
      a:active {
        color: $steps-circle-title-color;
      }
    }

    .disabled {
      .step {
        @include transition;
        background-color: $steps-disabled-bg;
        border-color: $steps-disabled-bg;
        color: $steps-disabled-color;
      }
      &:before,
      &:after {
        @include transition;
        background: $steps-disabled-bg;
      }
      a,
      a:hover,
      a:active {
        color: $steps-disabled-color;
      }
    }

    .error {
      .step {
        @include transition;
        @include background-text-theme($steps-error-theme-scheme, $sledge-hammer: !important);
        @include border-theme($steps-error-theme-scheme, $sledge-hammer: !important);
      }

      &:before,
      &:after {
        @include transition;
        @include background-theme($steps-error-theme-scheme, $sledge-hammer: !important);
      }
    }

    .disabled,
    .current {
      a {
        cursor: $cursor-default;
      }
    }

  }

}

//
// CIRCLE WIZARD OUTLINE TYPE
// ======================================================

.wizard.circle-wizard.outline {

  > .steps {

    .current:not(.done) {
      .step {
        background-color: $steps-circle-outline-active-bg;
        @include text-theme($steps-active-theme-scheme);
      }
    }
    .error {
      .step {
        background-color: $steps-circle-outline-error-bg !important;
        @include text-theme($steps-error-theme-scheme, $sledge-hammer: !important);
      }
    }

  }

}

//
// CIRCLE WIZARD - VERTICAL TYPE
// ======================================================

.wizard.circle-wizard.vertical {
  > .steps {
    ul li {
      &:before,
      &:after {
        content: none;
      }
    }
  }
}

//
// ARROW WIZARD TYPE
// ======================================================

//TODO https://codepen.io/jonangel247/pen/XKmMVJ
.wizard.arrow-wizard {
  > .steps {

    a {
      @include transition;
      @extend %button;
      //@extend .btn-lg;
      @include btn-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-min-width-lg, $btn-min-height-lg, $btn-font-size-lg, $btn-border-radius-lg, $btn-line-height-lg);
      width: 100%;
      border-radius: 0 !important;

      &:after,
      &:before {
        @include transition;
        @include add-border($arrow-wizard-border-size, transparent, top-bottom);
        @include add-border($arrow-wizard-border-size, transparent, left);
        content: " ";
        position: absolute;
        top: 0;
        left: 100%;
        width: 0;
        height: 0;
        z-index: 2;
      }

      &:before {
        @include add-border($arrow-wizard-border-size, $white-color, left);
        left: 0;
        z-index: 0;
      }
    }

    ul li {
      margin-right: 1px;
      @include max-screen($screen-xs-max) {
        margin-right: 25px;
      }
    }
    ul li:first-child {
      a {
        @if bool($enable-rounded) == true {
          border-top-left-radius: $btn-border-radius-lg !important;
          border-bottom-left-radius: $btn-border-radius-lg !important;
        }
        @include max-screen($screen-xs-max) {
          border-radius: 0 !important;
        }
        &:before {
          display: none;
          @include max-screen($screen-xs-max) {
            display: block;
          }
        }
      }
    }

    ul li:last-child {
      a {
        @if bool($enable-rounded) == true {
          border-top-right-radius: $btn-border-radius-lg !important;
          border-bottom-right-radius: $btn-border-radius-lg !important;
        }
        @include max-screen($screen-xs-max) {
          border-radius: 0 !important;
        }
        &:after {
          display: none;

          @include max-screen($screen-xs-max) {
            display: block;
          }

        }
      }
    }

    .current.done a,
    .done a {
      @include background-text-theme($steps-done-theme-scheme);
      &:after {
        @include border-theme($steps-done-theme-scheme, $position: left);
      }
    }

    .current a {
      @include background-text-theme($steps-active-theme-scheme, x-dark);
      cursor: $cursor-default;
      &:after {
        @include border-theme($steps-active-theme-scheme, x-dark, $position: left);
      }
    }

    .disabled a {
      background: $steps-disabled-bg;
      color: $steps-disabled-color;
      cursor: $cursor-default;
      &:after {
        border-left-color: $steps-disabled-bg;
      }
    }

    .error a {
      @include background-text-theme($steps-error-theme-scheme, $sledge-hammer: !important);
      &:after {
        @include border-theme($steps-error-theme-scheme, $position: left, $sledge-hammer: !important);
      }
    }

  }

}

//
// ARROW WIZARD - VERTICAL TYPE
// ======================================================

.wizard.arrow-wizard.vertical {
  > .steps {
    ul li {
      margin-right: 25px !important;
    }

    ul li:first-child {
      a {
        border-radius: 0 !important;
        &:before {
          display: block;
        }
      }
    }

    ul li:last-child {
      a {
        border-radius: 0 !important;
        &:after {
          display: block;
        }
      }
    }
  }
}

//
// TAB WIZARD TYPE
// ======================================================

.wizard.tab-wizard {
  > .steps {
    //@include add-border($nav-tabs-border-size, $nav-tabs-border-color, bottom);
    margin: 0;
    ul li {
      margin: 0 5px 0 0;
    }

    a {
      @include transition;
      @include set-border-radius($btn-border-radius-lg);
      @include border-bottom-radius(0);
      @include add-border($nav-tabs-border-size, transparent, all);
      font-size: $btn-font-size-lg;
      font-weight: $btn-font-weight;
      padding: $btn-padding-y-lg $btn-padding-x-lg;
      min-width: $btn-min-width-lg;
      min-height: $btn-min-height-lg;
      line-height: $btn-line-height-lg;
      color: $nav-tabs-link-color;
      width: 100%;
      display: inline-flex;
      align-items: center;
      justify-content: center;

      &:hover,
      &:focus {
        @include text-theme($nav-tabs-link-active-theme-scheme);
        border-color: $nav-tabs-link-hover-border-color $nav-tabs-link-hover-border-color $nav-tabs-border-color;
        background-color: $nav-tabs-link-hover-bg;
      }
    }

    .current a,
    .current a:hover,
    .current a:active {
      @include background-text-theme($steps-active-theme-scheme);
      @include border-theme($steps-active-theme-scheme);
      cursor: $cursor-default;
    }

  }

  > .content {
    @include border-top-radius(0);
    margin-top: -1px;
  }
}

//
// MISC
// ======================================================

.wizard > .loading {
}

.wizard > .loading .spinner {
}
