// ================================================================================================
// File Name      : collapse.scss
// Description    : Adjustments for accordions that toggle the visibility of content.
// ------------------------------------------------------------------------------------------------
// Item Name      : xxx - Responsive Admin Theme
// Version        : 1.2
// Author         : MANOJ, <manoj [at] xxx [dot] net>
// Author URL     : http://www.themeforest.net/user/xxx
// ================================================================================================

//
// DEFAULT ACCORDION TYPE
// ======================================================
// TODO https://www.codeply.com/go/506qHaPe9M

.accordion {

  .card-header {
    position: relative;

    > i {
      float: left;
      margin-right: $accordion-icon-margin-left;
    }
  }

  [data-toggle="collapse"] {
    @include transition;
    @include add-border($card-border-size, transparent, top);
    @include add-border(0, transparent, bottom);
    color: $accordion-title-active-color;
    background-color: $accordion-header-active-bg;
    border-color: $card-border-color;
    cursor: $cursor-pointer;
    display: flex;
    align-items: flex-start;

    &:focus,
    &:active,
    {
      color: $accordion-title-active-color;
    }

    &:first-child {
      border-top: none;
    }

    & .card-title,
    & .card-subtitle {
      color: inherit
    }

    & .card-subtitle {
      opacity:0.8;
    }

    // Collapsed state
    &.collapsed {
      color: $accordion-title-color;
      background-color: $accordion-header-collapsed-bg;

      &:hover {
        background-color: $accordion-header-collapsed-hover-bg;
        color: $accordion-title-hover-color;
      }
    }

  }

  & .card-body {
    background-color: $accordion-body-bg;
  }

  // Separated accordion
  &.separated {
    .card {
      @include add-border($card-border-size, $card-border-color, bottom);
      @include set-border-radius($card-border-radius);

      //&:not(:first-of-type) {
      //  &:not(:last-of-type) {
      //    @include add-border($card-border-size, $card-border-color, bottom);
      //    @include set-border-radius($card-border-radius);
      //  }
      //}
      //
      //&:first-of-type {
      //  @include add-border($card-border-size, $card-border-color, bottom);
      //  @include set-border-radius($card-border-radius);
      //}
      //
      //&:last-of-type {
      //  @include set-border-radius($card-border-radius);
      //}

    }
  }

  // Outline type
  &.outline {
    & [data-toggle="collapse"] {
      &.collapsed {
        background-color: transparent !important;
        color: $accordion-title-color !important;

        &:hover {
          background-color: $accordion-header-collapsed-hover-bg !important;
          color: $accordion-title-hover-color !important;
        }
      }
    }
  }

}

//
// STANDARD ACCORDION TYPE
// ======================================================

a.accordion {
  position: relative;

  &:after {

    left: 0;
  }

}

//
// ACCORDION EXTENDED TYPE
// ======================================================

.accordion.extended {

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $tone in $colors {
      &.accordion-#{$scheme} {
        .card {
          @include border-theme($scheme, x-dark);
        }

        & [data-toggle="collapse"] {
          @include background-text-theme($scheme, x-dark);

          &.collapsed {
            @include background-theme($scheme);

            &:hover {
              @include background-theme($scheme, x-dark);
            }
          }
        }

        &.separated {
          .card {
            @include border-theme($scheme, x-dark);
            //&:not(:first-of-type) {
            //  &:not(:last-of-type) {
            //    @include border-theme($scheme);
            //  }
            //}
            //
            //&:first-of-type {
            //  @include border-theme($scheme);
            //}
          }
        }

        &.outline {
          & [data-toggle="collapse"] {
            &.collapsed {
              &:hover {
                @include background-text-theme($scheme, $sledge-hammer: !important);
              }
            }
          }
        }

      }
    }
  }

  // Contextual variations
  @each $scheme, $tone in $contextual-palette-map {
    &.accordion-#{$scheme} {
      .card {
        @include border-theme($scheme, x-dark);
      }

      & [data-toggle="collapse"] {
        @include background-text-theme($scheme, x-dark);

        &.collapsed {
          @include background-theme($scheme);

          &:hover {
            @include background-theme($scheme, x-dark);
          }
        }
      }

      &.separated {
        .card {
          @include border-theme($scheme, x-dark);
          //&:not(:first-of-type) {
          //  &:not(:last-of-type) {
          //    @include border-theme($scheme);
          //  }
          //}
          //
          //&:first-of-type {
          //  @include border-theme($scheme);
          //}
        }
      }

      &.outline {
        & [data-toggle="collapse"] {
          &.collapsed {
            &:hover {
              @include background-text-theme($scheme, $sledge-hammer: !important);
            }
          }
        }
      }

    }
  }

}

//
// ACCORDION EXTENDED - UNDERLINE TYPE
// ======================================================

.accordion.extended.underline {
  .card {
    border: 0;
    box-shadow: none;
  }

  & [data-toggle="collapse"] {
    @include add-border($accordion-ext-border-size, $alpha-black-3, bottom);
    background-color: transparent;
    padding-left: 40px;

    &:after {
      left: 0.8rem;
    }

    &.collapsed {
      @include add-border($accordion-ext-border-size, $card-border-color, bottom);
    }
  }

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $tone in $colors {
      &.underline-#{$scheme} {
        & [data-toggle="collapse"]:not(.collapsed) {
          @include border-theme($scheme);
        }
      }
    }
  }


  // Contextual variations
  @each $scheme, $tone in $contextual-palette-map {
    &.underline-#{$scheme} {
      & [data-toggle="collapse"]:not(.collapsed) {
        @include border-theme($scheme);
      }
    }
  }

}

//
// ACCORDION EXTENDED - LEFT LINE TYPE
// ======================================================

.accordion.extended.left-line {
  .card {
    @include set-border-radius(0);
    border: 0;
    box-shadow: none;
  }

  & [data-toggle="collapse"] {
    @include set-border-radius(0);
    @include add-border($accordion-ext-border-size, $card-border-color, left);
    @include add-border(0, transparent, bottom);
    //@include border-theme($accordion-ext-theme-scheme);
    padding-left: 40px;

    &:after {
      right: 0;
      left: 0.8rem;
    }

    /* &:after {
       display: none;
     }*/

    &.collapsed {
      @include add-border(0, transparent, bottom);
      @include add-border($accordion-ext-border-size, $card-border-color, left);
      //@include border-theme($accordion-ext-theme-scheme);
    }

  }

  & .collapsing,
  & .collapse.show {
    @include add-border($accordion-ext-border-size, $card-border-color, left);
    //@include border-theme($accordion-ext-theme-scheme);
  }

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $tone in $colors {
      &.left-line-#{$scheme} {
        & [data-toggle="collapse"] {
          @include border-theme($scheme);

          &.collapsed {
            @include border-theme($scheme);
          }
        }

        & .collapsing,
        & .collapse.show {
          @include border-theme($scheme);
        }
      }
    }
  }

}


//
// ACCORDION INDICATORS TYPE
// ======================================================

// Default - Arrow up/down
.accordion {
  &[data-toggle="collapse"], //workaround for Standard accordion type
  & [data-toggle="collapse"] {
    &:after {
      font-family: $font-family-sli;
      content: $accordion-icon-active-default;
      @extend %acc-pseudo;
    }

    &.collapsed {
      &:after {
        content: $accordion-icon-collapsed-default;
      }
    }
  }
}

// Plus/minus
.accordion {
  &[data-toggle="collapse"].plus-minus,
  & [data-toggle="collapse"].plus-minus {
    &:after {
      font-family: $font-family-themify;
      font-size: 0.85rem;
      content: '\e622';
      @extend %acc-pseudo;

    }

    &.collapsed {
      &:after {
        content: '\e61a';
      }
    }
  }
}

// Angle double
.accordion {
  &[data-toggle="collapse"].angle-double,
  & [data-toggle="collapse"].angle-double {
    &:after {
      font-family: $font-family-themify;
      font-size: 0.85rem;
      content: '\e660';
      @extend %acc-pseudo;
    }

    &.collapsed {
      &:after {
        content: '\e663';
      }
    }
  }
}

// Arrow circle
.accordion {
  &[data-toggle="collapse"].arrow-circle,
  & [data-toggle="collapse"].arrow-circle {
    &:after {
      font-family: $font-family-themify;
      font-size: 0.85rem;
      content: '\e65c';
      @extend %acc-pseudo;
    }

    &.collapsed {
      &:after {
        content: '\e65f';
      }
    }
  }
}
