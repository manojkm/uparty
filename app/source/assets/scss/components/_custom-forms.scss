// ================================================================================================
// File Name      : custom-forms.scss
// Description    : Form control styles, layout options, and custom components for creating a
// wide variety of forms
// ------------------------------------------------------------------------------------------------
// Item Name      : xxx - Responsive Admin Theme
// Version        : 1.2
// Author         : MANOJ
// Author URL     : http://www.themeforest.net/user/xxx
// ================================================================================================

//
// CUSTOM FORMS
// ======================================================

.custom-control {
  min-height: (1rem * $lh-base);

  .custom-control-label {
    @include transition(color $general-transition-duration $ease-in-out-circ);
    line-height: $lh-base;
  }

  &.right-aligned {
    padding-left: 0;
  }
}

.custom-control-input {
  $cc: custom-control;

  &:checked ~ .#{$cc}-label {
    &::before {
      color: $custom-control-indicator-checked-color;
      box-shadow: none;
      border-color: transparent;
    }
    &::after {
    }
  }

  &:focus ~ .#{$cc}-label::before {
    box-shadow: none;
  }

  &:active ~ .#{$cc}-label::before {
    color: $custom-control-indicator-active-color;
    background-color: $custom-control-indicator-active-bg;
    box-shadow: none;
  }

  &:disabled {

    ~ .#{$cc}-label {
      color: $custom-control-label-disabled-color;
      cursor: $cursor-not-allowed;

      &::before {
        border-color: $custom-control-indicator-disabled-border-color;
        background-color: $custom-control-indicator-disabled-bg !important;
      }
    }
  }

}

// Custom Label
.custom-control-label {
  &::before {
    @include transition;
    top: (($lh-base - $custom-control-indicator-size) / 2);
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    background-color: $custom-control-indicator-bg;
    border: $custom-control-indicator-border-size solid $custom-control-indicator-border-color;
  }

  &::after {
    @include transition;
    top: (($lh-base - $custom-control-indicator-size) / 2);
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    background-size: $custom-control-indicator-bg-size;
  }

  .right-aligned & {
    &::before,
    &::after {
      right: 0;
      left: auto;
    }
  }
}

//
// CHECKBOXES
// ======================================================
// Tweak just a few things for checkboxes.

.custom-checkbox {
  $cc: custom-control;

  &.rounded {
    .#{$cc}-label::before {
      @include set-border-radius($custom-checkbox-rounded-indicator-border-radius);
    }
  }

  .#{$cc}-label::before {
    @include set-border-radius($custom-checkbox-indicator-border-radius);
  }
  .#{$cc}-label::after {
    //transform: scale(1,1);
    background-size: 0% 0%;
    transition: background-size 0.3s ease-in;
  }

  .#{$cc}-input:checked ~ .#{$cc}-label {
    &::before {
      @include background-theme($custom-control-indicator-checked-bg, xx-light);
    }
    &::after {
      //transform: scale(1.5,1.5);
      background-size: 65% 65%;
    }
  }

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $value in $colors {
      &.checkbox-#{$scheme} {
        .#{$cc}-input:checked ~ .#{$cc}-label::before {
          @include background-theme($scheme);
        }
      }
    }
  }

  // Contextual variations
  @each $scheme, $value in $contextual-palette-map {
    &.checkbox-#{$scheme} {
      .#{$cc}-input:checked ~ .#{$cc}-label::before {
        @include background-theme($scheme, $sledge-hammer: !important);
      }
    }
  }

  .#{$cc}-input:disabled ~ .#{$cc}-label {
    &::after {
      background-image: $custom-checkbox-indicator-disabled-icon-checked;
    }
  }

  .#{$cc}-input:indeterminate ~ .#{$cc}-label {
    &::before {
      @include background-theme($custom-control-indicator-checked-bg);
    }
  }
}

//
// RADIOS
// ======================================================

.custom-radio {
  $cc: custom-control;

  .#{$cc}-label::before {
    @include set-border-radius($custom-radio-indicator-border-radius);
  }
  .#{$cc}-label::after {
    background-size: 0% 0%;
    transition: background-size 0.3s ease-in;
  }

  .#{$cc}-input:checked ~ .#{$cc}-label {
    &::before {
      @include background-theme($custom-control-indicator-checked-bg);
    }
    &::after {
      background-size: 50% 50%;
    }
  }

  // Filled variant
  &.filled {
    .#{$cc}-label::after {
      background-image: none !important;
    }
    .#{$cc}-input:disabled:checked ~ .#{$cc}-label::before {
      @include background-theme($custom-control-indicator-checked-bg, light, $sledge-hammer: !important);
      opacity: 0.5;
    }
  }

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $value in $colors {
      &.radio-#{$scheme} {
        .#{$cc}-input:checked ~ .#{$cc}-label::before {
          @include background-theme($scheme);
        }

        // Tweak just a few things for filled variant.
        &.filled {
          .#{$cc}-input:disabled:checked ~ .#{$cc}-label::before {
            @include background-theme($scheme, light, $sledge-hammer: !important);
          }
        }

      }
    }
  }

  // Contextual variations
  @each $scheme, $value in $contextual-palette-map {
    &.radio-#{$scheme} {
      .#{$cc}-input:checked ~ .#{$cc}-label::before {
        @include background-theme($scheme, $sledge-hammer: !important);
      }

      // Tweak just a few things for filled variant.
      &.filled {
        .#{$cc}-input:disabled:checked ~ .#{$cc}-label::before {
          @include background-theme($scheme, light, $sledge-hammer: !important);
        }
      }

    }
  }

  .#{$cc}-input:disabled ~ .#{$cc}-label {
    &::after {
      background-image: $custom-radio-indicator-disabled-icon-checked;
    }

  }

}

//
// CUSTOM SELECT
// ======================================================

.custom-select {
  @include transition;
  @include set-border-radius($input-border-radius);
  height: $input-height;
  line-height: $custom-select-line-height;
  color: $custom-select-color;
  font-size: $custom-select-font-size;
  font-weight: $custom-select-font-weight;
  border: $custom-select-border-width solid $custom-select-border-color;
  padding: $btn-padding-y ($btn-padding-x + $custom-select-indicator-padding) $btn-padding-y $btn-padding-x;
  background: $custom-select-bg $custom-select-indicator no-repeat right $custom-select-padding-x center;
  background-size: $custom-select-bg-size;

  @include form-control-hover();
  @include form-control-focus();

  &:focus {
    // For visual consistency with IE.
    &::-ms-value {
      color: $input-color;
      background-color: $input-bg;
    }
  }

  &[multiple],
  &[size]:not([size="1"]) {
    padding-right: $btn-padding-x;
  }
  @include form-control-disabled();
}

//
// CUSTOM SELECT SIZING
// ======================================================

.custom-select-sm {
  height: $input-height-sm;
  padding: $btn-padding-y-sm ($btn-padding-x-sm + $custom-select-indicator-padding) $btn-padding-y-sm $btn-padding-x-sm;
  font-size: $input-font-size-sm;
  line-height: $btn-line-height-sm;
}

.custom-select-lg {
  height: $input-height-lg;
  padding: $btn-padding-y-lg ($btn-padding-x-lg + $custom-select-indicator-padding) $btn-padding-y-lg $btn-padding-x-lg;
  font-size: $input-font-size-lg;
  line-height: $btn-line-height-lg;
}

//
// CUSTOM FILE INPUT
// ======================================================

.custom-file {
  @include transition;
  height: $input-height;
  font-size: $input-font-size;
}

.custom-file-input {
  height: $input-height;

  &:focus ~ .custom-file-label {
    @include transition;
    color: $input-focus-color;
    //border-color: $input-focus-border-color;
    @include border-theme($input-focus-border-theme-scheme, $input-focus-border-theme-tone);
    box-shadow: none;

    &:after {
      background: $custom-file-button-focus-bg;
      //border-color: $input-focus-border-color;
    }
    @include border-theme($input-focus-border-theme-scheme, $input-focus-border-theme-tone);

    /* Set the border color to the focused state border color when the input is also hovered. */
    &:hover {
      //border-color: $input-focus-border-color;
      @include border-theme($input-focus-border-theme-scheme, $input-focus-border-theme-tone);
    }
  }

  &:hover {
    cursor: $cursor-pointer;
    & ~ .custom-file-label,
    & ~ .custom-file-label:after {
      border-color: $input-hover-border-color;
    }
  }

  &:disabled {
    cursor: $cursor-not-allowed;
  }

  &:disabled + .custom-file-label {
    @include opacity(0.8);
    border-color: $input-disabled-border-color;
    background-color: $input-disabled-bg;
    color: $input-disabled-color;

    &:before {
      //background: $input-disabled-bg;
      border-color: $input-disabled-border-color;
    }

  }

  @each $lang, $value in $custom-file-text {
    &:lang(#{$lang}) ~ .custom-file-label::after {
      //font-family: simple-line-icons, Arial;
      font-family: 'simple-line-icons', get-typography(font-default);
      content: $value;
    }
  }

}

.custom-file-label {
  @include transition;
  @include set-border-radius($input-border-radius);
  height: $input-height;
  line-height: $btn-line-height;
  padding: $btn-padding-y $btn-padding-x;
  color: $input-color;
  font-weight: $btn-font-weight;
  font-size: $input-font-size;
  border: $input-border-size solid $input-border-color;

  &::after {
    @include transition;
    @include set-border-radius($input-border-radius);
    @include border-left-radius(0);
    top: -$input-border-size;
    right: -$input-border-size;
    bottom: -$input-border-size;
    height: $input-height;
    padding: $btn-padding-y $btn-padding-x;
    line-height: $btn-line-height;
    color: $input-color;
    border: $input-border-size solid $input-border-color;
    background-color: $custom-file-button-bg;
  }
}

//
// FILE INPUT SIZING
// ======================================================

.custom-file-sm {
  height: $input-height-sm;
  font-size: $input-font-size-sm;

  .custom-file-input {
    height: $input-height-sm;
  }

  .custom-file-label {
    height: $input-height-sm;
    line-height: $btn-line-height-sm;
    padding: $btn-padding-y-sm $btn-padding-x-sm;
    font-size: $input-font-size-sm;
    &::after {
      height: $input-height-sm;
      line-height: $btn-line-height-sm;
      padding: $btn-padding-y-sm $btn-padding-x-sm;
    }
  }
}

.custom-file-lg {
  height: $input-height-lg;
  font-size: $input-font-size-lg;

  .custom-file-input {
    height: $input-height-lg;
  }

  .custom-file-label {
    height: $input-height-lg;
    line-height: $btn-line-height-lg;
    padding: $btn-padding-y-lg $btn-padding-x-lg;
    font-size: $input-font-size-lg;
    &::after {
      height: $input-height-lg;
      line-height: $btn-line-height-lg;
      padding: $btn-padding-y-lg $btn-padding-x-lg;
    }
  }
}

//
// TOGGLE SWITCH
// ======================================================

.custom-toggle-switch {
  $cts: custom-toggle-switch;
  $cci: custom-control-input;
  $ccind: custom-control-indicator;

  height: $custom-toggle-switch-height;
  display: flex !important;
  align-items: center;
  padding-left: 0;
  //padding-left: ($custom-toggle-switch-width + 10px);

  .#{$ccind} {
    @include transition;
    position: relative;
    top: 0;
    left: 0;
    width: $custom-toggle-switch-width;
    height: $custom-toggle-switch-height;
    background-color: $custom-toggle-switch-bg;
    display: flex;
    align-items: center;
    border-radius: $custom-toggle-switch-border-radius;
    border: $custom-toggle-switch-border;
    margin-right: 8px;

    &:hover {
      cursor: $cursor-pointer;
    }

    &:after {
      @include transition;
      content: '';
      position: absolute;
     // top: 3px;
      left:$custom-toggle-switch-knob-spacing-x;
      width: $custom-toggle-switch-knob-width;
      height: $custom-toggle-switch-knob-height;
      background-color: $input-border-color;
      border-radius: $custom-toggle-switch-knob-border-radius;
    }

    @at-root .mini#{&} {
      height: $custom-toggle-switch-mini-height;
      background-color: $custom-toggle-switch-mini-bg !important;
      border: $custom-toggle-switch-border !important;
      //&:after {
      //  top: -6px;
      //}
    }

    @at-root .square#{&} {
      border-radius: $custom-toggle-switch-square-border-radius;
      &:after {
        border-radius: $custom-toggle-switch-square-knob-border-radius;
      }
    }

  }

  // Checked state
  .#{$cci}:checked + .#{$ccind},
  .#{$cci}:checked:active + .#{$ccind} {
    @include transition;
    &:after {
      left: calc(100% - #{$custom-toggle-switch-knob-spacing-x});
      transform: translateX(-100%);
    }
  }

  // Active state
  .#{$cci}:active + .#{$ccind} {
    background-color: $custom-toggle-switch-bg;
    &:after {
      width: $custom-toggle-switch-knob-active-width;
    }
  }

  // Disabled state
  .#{$cci}:disabled + .#{$ccind} {
    background-color: $custom-control-indicator-disabled-bg;
    cursor: $cursor-not-allowed;
  }
  .#{$cci}:disabled:active + .#{$ccind}:after {
    width: $custom-toggle-switch-knob-width;
  }

  // Checked + Disabled state
  .#{$cci}:disabled:checked + .#{$ccind} {
    @include opacity(0.5);
  }

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $value in $colors {
      &.#{$cts}-#{$scheme} {
        @include custom-toggle($scheme);
      }
    }
  }

  // Contextual variations
  @each $scheme, $value in $contextual-palette-map {
    &.#{$cts}-#{$scheme} {
      @include custom-toggle($scheme);
    }
  }
}

//
// FLIPPED TOGGLE SWITCH
// ======================================================

.custom-toggle-flip {
  $ctf: custom-toggle-flip;
  $cci: custom-control-input;
  $ccind: custom-control-indicator;

  display: flex !important;
  align-items: center;
  padding-left: 0;

  .#{$ccind} {
    position: relative;
    width: $custom-toggle-switch-flip-width;
    height: $custom-toggle-switch-flip-height;
    display: block;
    cursor: $cursor-pointer;
    user-select: none;
    perspective: $custom-toggle-switch-flip-width + $custom-toggle-switch-flip-height;
    margin-right: 8px;
    color: $custom-toggle-switch-flip-off-state-color;
    border-radius: $custom-toggle-switch-flip-border-radius;
    border:  $input-border-size solid transparent;
    box-sizing: border-box;

    &:before, &:after {
      @include transition;
      position: absolute;
      top: 0;
      left: 0;
      display: flex;
      align-items: center;
      justify-content: center;

      width: 100%;
      height: 100%;
      //line-height: ($custom-toggle-switch-flip-height);
      backface-visibility: hidden;
      text-align: center;
      border-radius: $custom-toggle-switch-flip-border-radius;
    }

    &:before {
      content: attr(data-toggle-off);
      background-color: $custom-toggle-switch-flip-off-state-bg;
    }

    &:after {
      content: attr(data-toggle-on);
      transform: rotateY(-180deg);
    }
  }

  // Checked state
  .#{$cci}:checked + .#{$ccind},
  .#{$cci}:checked:active + .#{$ccind} {
    @include transition;

    &:before {
      transform: rotateY(180deg)
    }
    &:after {
      transform: rotateY(0deg)
    }
  }

  // Disabled state
  .#{$cci}:disabled + .#{$ccind} {
    background-color: $custom-control-indicator-disabled-bg;
    color: $custom-control-indicator-disabled-color;
    cursor: $cursor-not-allowed;
  }

  // Checked + Disabled state
  .#{$cci}:disabled:checked + .#{$ccind} {
    @include opacity(0.5);
  }

  // YES/NO flipped toggle switch
  &.yes-no .#{$ccind} {
    &:before {
      background-color: contextual-color(danger, base);
      color: contextual-color(danger, font-color);
    }
    &:after {
      transform: rotateX(-180deg);
    }
  }

  // YES/NO flipped toggle switch checked state
  &.yes-no .#{$cci}:checked + .#{$ccind},
  &.yes-no .#{$cci}:checked:active + .#{$ccind} {
    &:before {
      transform: rotateX(180deg)
    }
    &:after {
      transform: rotateX(0deg)
    }
  }

  // YES/NO flipped toggle switch disabled state
  &.yes-no .#{$cci}:disabled + .#{$ccind} {
    @include opacity(0.5);
  }

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $value in $colors {
      &.#{$ctf}-#{$scheme} {
        @include custom-toggle-flip($scheme);
      }
    }
  }

  // Contextual variations
  @each $scheme, $value in $contextual-palette-map {
    &.#{$ctf}-#{$scheme} {
      @include custom-toggle-flip($scheme);
    }
  }

}

