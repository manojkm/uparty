// ================================================================================================
// File Name      : lists-group.scss
// Description    : Adjustments for Bootstrap's list group.
// ------------------------------------------------------------------------------------------------
// Item Name      : xxx - Responsive Admin Theme
// Version        : 1.2
// Author         : MANOJ, <manoj [at] xxx [dot] net>
// Author URL     : http://www.themeforest.net/user/xxx
// ================================================================================================

@if (map-get-strict($components, 'list-group')) {

  //
  // BASE STYLING
  // ======================================================

  .list-group {
    @include set-border-radius($list-group-border-radius);
  }

  //
  // INDIVIDUAL LIST ITEMS
  // ======================================================

  .list-group-item {

    @extend %list-group-item;

    &:first-child {
      @include border-top-radius(inherit);
    }

    &:last-child {
      @include border-bottom-radius(inherit);
    }

    #{$disabled-tags} {
      background-color: $list-group-disabled-bg;
      opacity: $list-group-disabled-opacity;
      color: $list-group-disabled-color !important;
    }

    // Include both here for `<a>`s and `<button>`s
    &.active {
      @include background-text-theme($list-group-active-theme-scheme, $sledge-hammer: !important);
      @include border-theme($list-group-active-theme-scheme);
    }

    & + & {
      &.active {
        margin-top: -$list-group-border-width;
        border-top-width: $list-group-border-width;
      }
    }

    // Separated list group item
    .separated > & {
      margin-bottom: $list-group-separated-margin-bottom;
      border-top-width: $list-group-border-width;
    }

    // Animated list group item
    .animated > & {
      @include transition(padding-left .15s $ease-in-quad);

      &:hover {
        padding-left: $list-group-item-padding-x+.75;
      }
    }

  }

  //
  // SIZING
  // ======================================================

  .list-group-item {

    // Extra large size
    .list-group-xl & {
      @include list-group-size($btn-padding-y-xl, $btn-padding-x-xl, $btn-font-size-xl, $btn-border-radius-xl, $btn-line-height-xl);
    }

    // Large size
    .list-group-lg & {
      @include list-group-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg, $btn-line-height-lg);
    }

    // Small size
    .list-group-sm & {
      @include list-group-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm, $btn-line-height-sm);
    }
  }

  //
  // INTERACTIVE LIST ITEM
  // ======================================================

  .list-group-item-action {
    color: $list-group-action-color !important;

    // Hover state
    #{$hover-focus-tags} {
      background-color: $list-group-hover-bg;
      color: $list-group-action-hover-color !important;
    }

    &:active {
      background-color: $list-group-action-active-bg;
      color: $list-group-action-active-color !important;
    }
  }

  //
  // HORIZONTAL VARIATION
  // ======================================================

  .list-group-horizontal {
    > .list-group-item {
      @include list-group-item-horizontal();
    }
  }

  // Generate series of `.list-group-horizontal-{sm|md|lg|xl}` classes to make a list group
  // horizontal starting at that breakpointâ€™s min-width
  @each $breakpoint, $length in $breakpoints-max-widths {
    $next-breakpoint: breakpoint-next($breakpoint, $breakpoints-min-widths);
    $next-length: map-get-strict($breakpoints-min-widths, $next-breakpoint);

    @include min-screen(#{$next-length}) {
      .list-group-horizontal-#{$next-breakpoint} {
        > .list-group-item {
          @include list-group-item-horizontal();
        }
      }
    }
  }

  //
  // LIST GROUP THEMES
  // ======================================================

  // Theme variations
  @each $themeName, $value in $themes-map {
    $colors: map-get-strict($value, 'main-colors');
    @each $scheme, $tone in $colors {
      $font-color: get-theme-color-level($scheme, base, $list-group-color-level);
      $tone: get-theme-color-level($scheme, base, $list-group-bg-level);
      .list-group-item-#{$scheme} {
        @include list-group-theme($scheme, $tone, xx-dark, $font-color, 5%);
      }
    }
  }

  // Contextual variations
  @each $scheme, $tone in $contextual-palette-map {
    $font-color: get-theme-color-level($scheme, base, $list-group-color-level);
    $tone: get-theme-color-level($scheme, base, $list-group-bg-level);
    .list-group-item-#{$scheme} {
      @include list-group-theme($scheme, $tone, xx-dark, $font-color, 5%);
    }
  }

}

