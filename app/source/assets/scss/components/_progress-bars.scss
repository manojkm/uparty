// ================================================================================================
// File Name      : progress-bars.scss
// Description    : Adjustments for Bootstrap's progress component and custom progress bars
//                  featuring support for stacked bars, animated backgrounds, and text labels.
// ------------------------------------------------------------------------------------------------
// Item Name      : xxx - Responsive Admin Theme
// Version        : 1.2
// Author         : MANOJ, <manoj [at] xxx [dot] net>
// Author URL     : http://www.themeforest.net/user/xxx
// ================================================================================================

@if (map-get-strict($components, 'progress-bars')) {


// Base styles
.progress {
  @include set-border-radius($progress-border-radius);
  box-shadow: $progress-box-shadow;
  font-size: $progress-label-font-size;
  line-height: $progress-height;
  background-color: $progress-bg;
  height: $progress-height;

  &-bar {
    @include transition;
    @include background-text-theme(primary);
    height: $progress-height;
    line-height: $progress-height;
    position: relative;
  }

  // Small size
  &-sm {
    height: $progress-height-sm;
    .progress-bar {
      height: $progress-height-sm;
    }
  }

  // Large size
  &-lg {
    height: $progress-height-lg;
    .progress-bar {
      height: $progress-height-lg;
    }
  }

  &-bar-striped {
    background-size: $progress-height $progress-height;
  }

}

//
// PROGRESS BAR EXTENDED TYPE
// ======================================================

.progress {

  &.extended {
    overflow: visible;

    & .progress-bar {
      @include set-border-radius($progress-border-radius);
      position: relative;

      span.progress-label {
        @include set-border-radius($border-radius-sm);
        font-size: $progress-label-font-size;
        line-height: $progress-height;
        position: absolute;
        padding: 4px;
        z-index: map-get($zindex, progress-bar-label);

        &::before,
        &::after {
          content: '';
          display: block;
          position: absolute;
          width: .6666em; // Badges arrow width. Height and width should be same to make triangle perfect.
          height: .6666em; // Badges arrow height. Height and width should be same to make triangle perfect.
          border: 1px solid;
          border-color: inherit;
          background-color: inherit;
          transform: translateX(-50%) translateY(-50%) rotate(45deg);
        }

        &::before {
          z-index: -1;
        }

        // Label on top
        &.bottom {
          bottom: -25px;
          right: -1.4em;
          &::before,
          &::after {
            bottom: 100%;
            left: 50%;
            margin-bottom: -8px;
            border-bottom: 0;
            border-right: 0;
          }
        }

        // Label on bottom
        &.top {
          top: -25px;
          right: -1.4em;
          &::before,
          &::after {
            top: 100%;
            left: 50%;
            margin-top: 0;
            border-top: 0;
            border-left: 0;
          }
        }

        // Label on right
        &.right {
          right: -4em;
          &::before,
          &::after {
            top: 50%;
            left: 0;
            border-top: 0;
            border-right: 0;
          }
        }

        // Label on left
        &.left {
          right: 1em;
          &::before,
          &::after {
            top: 50%;
            left: 100%;
            border-bottom: 0;
            border-left: 0;
          }
        }

        /*  &::after {
            border: 5px solid transparent;
            content: "";
            bottom: 100%;
            left: 50%;
            margin-left: -5px;
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
          }*/
      }
    }

    // Theme variations
    @each $themeName, $value in $themes-map {
      $colors: map-get-strict($value, 'main-colors');
      @each $scheme, $tone in $colors {
        & .bg-#{$scheme} {
          @include progress-bar-theme($scheme);
        }
      }
    }

    // Contextual variations
    @each $scheme, $tone in $contextual-palette-map {
      & .bg-#{$scheme} {
        @include progress-bar-theme($scheme);
      }
    }

  }
}


}
